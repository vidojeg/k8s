apiVersion: v1
kind: Service
metadata:
  labels:
    app: sonarqube
  name: sonarqube
spec:
  ports:
    - name: sonar
      port: 80
      protocol: TCP
      targetPort: 9000
  selector:
    app: sonarqube

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sonarqube
  name: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      initContainers:
        - name: init-sysctl
          image: busybox:1.32
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          resources:
            {}
          command: ["sysctl",
                "-w",
                "vm.max_map_count=262144"]
      containers:
        - name: sonarqube
          image: sonarqube:lts
          resources:
            requests:
              cpu: 500m
              memory: 1024Mi
            limits:
              cpu: 2000m
              memory: 2048Mi
          env:
          - name: "SONARQUBE_JDBC_USERNAME"
            value: "postgresadmin"
          - name: "SONARQUBE_JDBC_URL"
            value: "jdbc:postgresql://postgres.sonarqube.svc.cluster.local:5432/sonar"
          - name: "SONARQUBE_JDBC_PASSWORD"
            value: "admin123"
          ports:
          - containerPort: 9000
            protocol: TCP

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: sonarqube-ingress
  namespace: sonarqube
  labels:
    app: sonarqube
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts: 
      - sonarqube.example.com
    secretName: sonarqube-dev-secret-tls
  rules:
  - host: sonarqube.example.com
    http:
      paths:
      - path: /
        backend:
          serviceName: sonarqube
          servicePort: 80

